// Generated by Dagger (https://dagger.dev).
package com.esaudev.weatherapp.di;

import android.app.Application;
import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideFusedLocationProviderClientFactory implements Factory<FusedLocationProviderClient> {
  private final Provider<Application> applicationProvider;

  public AppModule_ProvideFusedLocationProviderClientFactory(
      Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public FusedLocationProviderClient get() {
    return provideFusedLocationProviderClient(applicationProvider.get());
  }

  public static AppModule_ProvideFusedLocationProviderClientFactory create(
      Provider<Application> applicationProvider) {
    return new AppModule_ProvideFusedLocationProviderClientFactory(applicationProvider);
  }

  public static FusedLocationProviderClient provideFusedLocationProviderClient(
      Application application) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideFusedLocationProviderClient(application));
  }
}
